type Query {
  artist(artistId: ID): Artist
  artistList(top: Int!): [Artist!]!

  album(albumId: ID): Album
  albumList(artistId: ID!, top: Int): [Album]!

  song(songId: ID): Song
  songList(artistId: ID!, top: Int): [Song]!
}

type Mutation {
  createArtist(
    artistId: ID
    name: String!
    joinedAt: Int
  ): Artist

  updateArtist(
    artistId: ID!
    name: String
  ): Artist

  deleteArtist(
    artistId: ID!
  ): Artist

  # createSong
  # updateSong
  # deleteSong

  # createAlbum
  # updateAlbum
  # deleteAlbum
}

type Artist {
  artistId: ID!
  name: String!
  songs: [Song]
  albums: [Album]
  joinedAt: Int!
  imageSources: [String!]!
}

type Song {
  songId: ID
  title: String!
  artists: [Artist]!
  by: User
  audioSources: [String!]!
  imageSources: [String!]!
  createdAt: Int!
}

type Album {
  albumId: ID!
  title: String!
  createdAt: Int!
  by: User
  artists: [Artist!]!
  songs: [Song!]!
}

type User {
  userId: ID!
  name: String!
  joinedAt: Int!
}

schema {
  query: Query
  mutation: Mutation
}
